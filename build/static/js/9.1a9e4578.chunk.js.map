{"version":3,"sources":["components/Blogs/BlogPost.tsx","components/Blogs/ShowBlog.tsx","components/Blogs/BlogContainer.tsx"],"names":["BlogPost","title","date","image","id","url","name","returnBlog","useState","preview","setPreview","data","setData","useEffect","Axios","get","then","res","htmlToText","slice","tags","options","uppercase","err","useContext","CurrentBlogContext","to","style","textDecoration","color","onClick","className","src","alt","ShowBlog","state","setState","blog","dataUrl","setDataUrl","context","BlogContext","windowId","Number","document","location","href","split","body","scrollTop","blogHeader","querySelector","classList","remove","status","blogs","filter","blog_id","set404","blog_title","Date","blog_date","toDateString","blog_name","response","add","dangerouslySetInnerHTML","__html","BlogContainer","setBlogs","undefined","setBlog","sort","a","b","map","exact","path","component","Error"],"mappings":"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","file":"static/js/9.1a9e4578.chunk.js","sourcesContent":["import React, {useEffect, useContext, useState}from 'react'\nimport {history} from '../../App'\nimport {CurrentBlogContext} from '../../App'\nimport Axios from 'axios'\nimport {htmlToText} from 'html-to-text'\nimport {NavLink} from 'react-router-dom'\ninterface BlogPostProps {\n        title:string\n        id:number\n        date:string\n        image:string\n        url:string\n        name:string\n        returnBlog(data:string, image:string, title:string, date:string, blog_name:string):void\n}\n\nconst BlogPost: React.FC<BlogPostProps> = ({title, date, image, id, url, name, returnBlog}) => {\n        const [preview, setPreview] = useState<string>('')\n        const [data, setData] = useState(\"\")\n        useEffect(() => {\n        Axios.get(url).then(res => {\n                try {\n                        setPreview(htmlToText(res.data.slice(0, 80), {\n                                tags: {\n                                        'h1': { options: { uppercase: false }, \n                                 }\n                        }}) + \"...\")\n                } catch (err) {\n                        setPreview('')\n                }\n               \n                setData(res.data)\n        })\n    \n        })\n        const context = useContext(CurrentBlogContext)\n        const reRoute = () => {\n      \n        history.push(`/blogs/${id}`)\n\n        \n        }\n        const goToBlog = () => {\n                returnBlog(data, image, title, date, name)\n        }\n        return (\n                <NavLink to={`blogs/blog/${id}`} style={{textDecoration:\"none\", color:\"black\"}} onClick={goToBlog}>\n                <div className=\"blog\">\n                <h2  className=\"blog-title\" >{title}</h2>\n                \n                <img src={image} alt=\"used for the blog in question\" />\n                <div className=\"date-name\"><p>{date}</p>\n                <p>By {name}</p></div>\n                <div className=\"preview\">   \n                {preview}\n                </div>\n                </div>\n                </NavLink>\n\n                );\n}\nexport default BlogPost","import React, {useEffect, useState, useContext} from 'react'\nimport \"../../css/blog.scss\"\nimport {BlogContext} from '../../App'\nimport Axios from 'axios'\n\ninterface ShowBlogProps {\n    data:{blog:string,image:string, title:string, date:string, blog_name:string} | undefined;\n}\n\nconst ShowBlog: React.FC<ShowBlogProps> = ({data}) => {\n    const [state, setState] = useState<Partial<{blog:string,image:string, title:string, blog_date: Date; date:string, blog_name:string} | undefined>>(data)\n    const [dataUrl, setDataUrl] = useState<string | undefined>(data?.blog)\n    const context = useContext(BlogContext)\n    useEffect(() => {\n        \n        let windowId = Number(document.location.href.split('/').slice(-1)[0])\n        document.body.scrollTop = 0\n        let blogHeader = document.querySelector('a[href=\"/blogs\"]')\n        blogHeader?.classList.remove('active')\n        if (context?.status === \"LOADED\") {\n            let blog = context.blogs?.filter(blog => blog.blog_id === windowId)[0]\n            if (!blog){\n                context.set404(true)\n            }\n            setState({\n                image:blog?.image,\n                title:blog?.blog_title, \n                date:new Date(blog?.blog_date!).toDateString(),\n                blog_name:blog?.name,\n            })\n            Axios.get(blog?.url!).then((response) => {\n                setDataUrl(response.data)\n            })\n        }\n        return () => {\n            blogHeader?.classList.add('active')\n        }\n    }, [context])\n        return (\n            <div className=\"blog-post\">\n                <h2 id=\"blog-title\">{state?.title}</h2>\n                <img src={state?.image} id=\"blog-image\" alt=\"for the blog\" />\n                <h3 id=\"blog-date\">{state?.date}</h3>\n                <h4 id=\"blog-name\">By {state?.blog_name}</h4>\n        <div id=\"show-blog\" dangerouslySetInnerHTML={{__html:dataUrl!}}></div>\n        </div>);\n}\nexport default ShowBlog;","import React, {useEffect, useState, useContext} from 'react'\nimport BlogPost from './BlogPost'\nimport \"../../css/blogs.scss\"\nimport {BlogContext} from '../../App'\nimport {Route, Switch} from 'react-router-dom'\nimport ShowBlog from './ShowBlog'\nimport Error from '../Admin/Error'\n\ninterface BlogContainerProps {\n\n}\n\ntype Blogs = {\n  \n                blog_date: Date;\n                blog_id:number;\n                blog_title:string;\n                name:string;\n                url:string;\n                blog_details:string;\n                \n            \n}[]\n\ntype Blog = {\n  \n        blog_date: Date;\n        blog_id:number;\n        blog_title:string;\n        name:string;\n        url:string;\n        blog_details:string;\n        \n    \n}\nconst BlogContainer: React.FC<BlogContainerProps> = () => {\n        const [blogs, setBlogs] = useState<any>([])\n        const [url, setUrl] = useState('')\n        const [name, setName] = useState('')\n        const [blog, setBlog] = useState<{blog:string,image:string, title:string, date:string, blog_name:string} | undefined>(undefined)\n        let context = useContext(BlogContext)\n        \n\n        const returnBlog = (data:string, image:string, title:string, date:string, blog_name:string) => {\n                \n                setBlog({blog: data, image: image, title: title, date:date, blog_name})\n        }\n        useEffect(() => {\n                if (context?.status === \"LOADED\") {\n                        context.blogs?.sort((a, b) => a.blog_date < b.blog_date ?1:-1)\n                        setBlogs(context.blogs?.map(blog => {\n                                return <BlogPost key={blog.blog_id} \n                                title={blog.blog_title} \n                                url ={blog.url} \n                                image={blog.image} id={blog.blog_id} \n                                date={new Date(blog.blog_date).toDateString()}\n                                name={blog.name}\n                                returnBlog={returnBlog}/>\n                        }))\n                }\n        },[context])\n\n        \n        return (\n        \n        <div ><Switch>\n                <Route exact path=\"/blogs\">\n        <h1 id=\"head-blog\">Read Our Blogs</h1>\n        <div id=\"blog-container\">\n              \n        {blogs}\n\n        </div> \n        </Route>\n        <Route exact path=\"/blogs/blog/:id\">\n                <ShowBlog data={blog}/>\n        </Route>\n        <Route component={Error}/>\n        </Switch>\n        </div>\n        );\n}\nexport default BlogContainer"],"sourceRoot":""}