{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","components/Admin/AdminGetter.tsx"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","AdminGetter","item","getData","useState","clicked","setClicked","display","setDisplay","data","setData","blogContext","useContext","BlogContext","eventContext","EventContext","string","className","charAt","toUpperCase","slice","onClick","status","events","map","event","Axios","get","url","then","response","html","decodeURIComponent","event_name","Date","event_date","toDateString","src","image","alt","id","blogs","blog","blog_title","blog_date","style","marginBottom"],"mappings":"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","file":"static/js/20.42b891a2.chunk.js","sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import React, {useState, useContext} from 'react'\n\nimport Axios from 'axios'\n\nimport {BlogContext, EventContext}  from '../../App'\n\ninterface AdminGetterProps {\n    item: string\n    getData(data:any, type: string):any\n}\n\nconst AdminGetter: React.FC<AdminGetterProps> = ({item, getData}) => {\n    \n    const [clicked, setClicked] = useState(false)\n    const [display, setDisplay] = useState('none')\n    const [data, setData] = useState<any>(<div></div>)\n    const [htmlData, setHtmlData] = useState(<div></div>)\n    let blogContext = useContext(BlogContext)\n    let eventContext = useContext(EventContext)\n\n     function capitalizeFirstLetter(string:string) {\n        return string.charAt(0).toUpperCase() + string.slice(1);\n      }\n\n      const editData = (data:any, imgUrl:string = \"\") => {\n        getData(data, item)\n      }\n      const getItems = () => {\n          \n      if (clicked) return\n          setDisplay('block')\n       switch (item) {\n           case 'events':\n               if (eventContext?.status === \"LOADED\"){\n                   \n                   setData(eventContext.events?.map(event => {\n                    let ourData = \"\"\n\n                const sendBlogData = () => {\n                    \n                    Axios.get(event.url).then(response => {\n                        getData({...event, html:response.data}, item)\n                    })\n                }\n                   \n                return (\n                    <div>\n\n                        <h2 className=\"clickable\" onClick={sendBlogData}>{decodeURIComponent(event.event_name)}</h2>\n                        <h3>{new Date(event.event_date).toDateString()}</h3>\n                        <img src={event.image} alt=\"preview\" id=\"detail-photo\" />\n                        </div>\n                )\n                \n                \n            }))\n               }\n               break\n            case 'blogs':\n                if (blogContext?.status === \"LOADED\") {\n                    \n                   setData(blogContext.blogs?.map(blog => {\n                            let ourData = \"\"\n\n                        const sendBlogData = () => {\n                            \n                            Axios.get(blog.url).then(response => {\n                                getData({...blog, html:response.data}, item)\n                            })\n                        }\n                           \n                        return (\n                            <div>\n\n                                <h2 className=\"clickable\" onClick={sendBlogData}>{decodeURIComponent(blog.blog_title)}</h2>\n                                <h3>{new Date(blog.blog_date).toDateString()}</h3>\n                                <img src={blog.image} alt=\"preview\" id=\"detail-photo\" />\n                                </div>\n                        )\n                        \n                        \n                    }))\n                }   \n                \n\n       }\n        setClicked(true)\n      }\n      \n        \n        return (\n        <div className=\"admin-getter\"><h1>{capitalizeFirstLetter(item)}</h1>\n        <p onClick={getItems} id=\"show\">Click here to show all the {item}.</p>\n        <div id=\"line-display\" style={{display:display}}>\n        <div id=\"inserted-content\" ></div>\n        </div>\n        \n        <div id=\"inserted-content\" style={{marginBottom:'20px'}}>{data}</div>\n        </div>\n        );\n}\n\n\nexport default AdminGetter"],"sourceRoot":""}