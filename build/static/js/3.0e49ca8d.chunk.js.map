{"version":3,"sources":["images/Copy_of_Datt-removebg-preview.png","components/LogoHead.tsx","components/EventModal.tsx","components/Navigation.tsx"],"names":["LogoHead","useEffect","to","id","alt","src","logo","EventModal","styling","changeState","context","useContext","EventContext","eventContext","CurrentEventContext","useState","events","setEvents","location","useLocation","status","console","log","pathname","style","display","map","event","data","Axios","get","url","then","response","goToEvent","e","stopPropagation","getEvents","event_name","split","join","toLowerCase","textDecoration","color","onClick","onTouchEnd","className","Navigation","state","setState","open","setOpen","setClicked","setDisplay","size","setSize","useRef","useHistory","window","innerWidth","Array","from","document","querySelectorAll","svgChange","svg","querySelector","fill","transition","svgChangeAgain","clickBurger","opt","nav","navUl","height","opacity","setTimeout","addEventListener","scrollY","activeStyle","onMouseEnter","onTouchStart","onMouseLeave"],"mappings":"uHAAe,MAA0B,0D,eCoB1BA,EAX2B,WAKlC,OAHAC,qBAAU,eAGF,cAAC,IAAD,CAAMC,GAAG,IAAT,SAAa,qBAAKC,GAAG,kBAAR,SAA0B,qBAAKA,GAAG,OAAOC,IAAI,wBAAwBC,IAAKC,S,yCCqCxFC,EAvC+B,SAAC,GAA4B,IAA3BC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,YAC/CC,EAAUC,qBAAWC,KACrBC,EAAeF,qBAAWG,KAFsC,EAG1CC,mBAAc,IAH4B,mBAG/DC,EAH+D,KAGvDC,EAHuD,OAIxCF,mBAAiB,IAJuB,mBAKhEG,GALgE,UAKrDC,eAeb,OAdJlB,qBAAU,WAEiB,YAAb,OAAPS,QAAO,IAAPA,OAAA,EAAAA,EAASU,SACRH,EAAUP,EAAQM,QAEvBK,QAAQC,IAAR,sBAA2BJ,EAASK,WAChCd,GACHA,MAGD,CAACC,EAASQ,IAID,qBAAKf,GAAG,cAAcqB,MAAO,CAACC,QAAQjB,GAAtC,SAAiDQ,EAAOU,KAAI,SAACC,GAEjE,IAAIC,EAAO,GACXC,IAAMC,IAAIH,EAAMI,KAAKC,MAAK,SAACC,GACnBL,EAAOK,EAASL,QAExB,IAAMM,EAAY,SAACC,GACfA,EAAEC,kBACU,OAAZvB,QAAY,IAAZA,KAAcwB,UAAUV,EAAOC,IAEnC,OAAO,cAAC,IAAD,CAEP1B,GAAE,kBAAayB,EAAMW,WAAWC,MAAM,KAAKC,KAAK,KAAKC,eACrDjB,MAAO,CAACkB,eAAe,OAAQC,MAAM,WAAYC,QAAS,SAACT,GAAD,OAAOD,EAAUC,IAAIU,WAAYX,EAHpF,SAIH,mBAAGY,UAAU,cAAb,SAA4BnB,EAAMW,qB,SC0GnCS,UA5I+B,WAAO,IAAD,EACtBhC,oBAAS,GADa,mBACzCiC,EADyC,KAClCC,EADkC,OAExBlC,oBAAS,GAFe,mBAEzCmC,EAFyC,KAEnCC,EAFmC,OAGlBpC,oBAAS,GAHS,mBAGhCqC,GAHgC,aAIlBrC,mBAAS,GAJS,mBAIzCU,EAJyC,KAIhC4B,EAJgC,OAKxBtC,mBAAyB,MALD,mBAKzCuC,EALyC,KAKnCC,EALmC,OAMpBxC,oBAAS,GANW,6BAO/ByC,mBACDC,cACCtC,cACjBlB,qBAAW,WAEHyD,OAAOC,WAAa,IACpBJ,GAAQ,IAIRF,EAAW,GACXE,GAAQ,IAKZ,IAFA,IAEA,MAFYK,MAAMC,KAAKC,SAASC,iBAAiB,gBAEjD,eAAqB,CAAX,KACJvC,MAAMkB,eAAiB,WAIjC,IAAMsB,EAAY,WACd,IAAIC,EAAMH,SAASI,cAAc,OACjCD,EAAIzC,MAAM2C,KAAO,UACjBF,EAAIzC,MAAM4C,WAAc,gDACxBnB,GAAS,IAIPoB,EAAiB,WACTP,SAASI,cAAc,OAC7B1C,MAAM2C,KAAO,UAEblB,GAAS,IAIXqB,EAAc,WAAwB,IAAvBC,EAAsB,wDACvCnB,GAAW,GAGX,IAAMoB,EAAMV,SAASI,cAAc,qBAC7BO,EAAQX,SAASI,cAAc,iBAIjCO,EAAMjD,MAAM4C,WADZG,EACyB,OAGA,iBAE7BC,EAAIhD,MAAM4C,WAAa,iBACnBlB,GACAsB,EAAIhD,MAAMkD,OAAS,OACnBvB,GAAQ,GACRsB,EAAMjD,MAAMmD,QAAU,IACtBC,sBAAW,kBAAMH,EAAMjD,MAAMC,QAAU,SAAQ,OAG/CgD,EAAMjD,MAAMC,QAAU,OACtBgD,EAAMjD,MAAMmD,QAAU,IACtBF,EAAMjD,MAAMC,QAAU,QACtB0B,GAAQ,GACRqB,EAAIhD,MAAMkD,OAAS,QAEnBE,sBAAW,kBAAMH,EAAMjD,MAAMmD,QAAU,MAAK,OAQpDjB,OAAOmB,iBAAiB,UAAU,WAE1BnB,OAAOC,WAAa,IACpBJ,GAAQ,IAGRA,GAAQ,GACJL,GACAoB,GAAY,OAMxBZ,OAAOmB,iBAAiB,UAAU,WACff,SAASI,cAAc,cAClCR,OAAOoB,WAcf,IAAMrE,EAAc,WAChBwC,GAAS,IAET,OAAQ,8BAAMK,EAAK,sBAAKnD,GAAG,aAAR,UAEX,cAAC,IAAD,CAAMD,GAAG,IAAT,SAAa,cAAC,EAAD,MACjB,qBAAIC,GAAG,SAAP,UACI,6BAAI,6BAAK,cAAC,IAAD,CAASD,GAAG,YAAY6E,YAAa,CAACrC,eAAe,QAArD,0BAET,qBAAIvC,GAAG,YAAY6E,aAAchB,EAAWiB,aAAcjB,EAAWkB,aAAcb,EAAnF,UAAmG,wCAAU,cAAC,IAAD,OAA6BrB,EAAM,cAAC,EAAD,CAAYxC,QAAQ,SAAS,cAAC,EAAD,CAAYC,YAAaA,EAAaD,QAAQ,aAC3N,6BAAI,6BAAI,cAAC,IAAD,CAASN,GAAG,SAAZ,6BAIT,sBAAKC,GAAG,mBAAR,UAEC,cAAC,IAAD,CAAMD,GAAG,IAAT,SAAa,cAAC,EAAD,MACjB,qBAAIC,GAAG,eAAeqB,MAAO,CAACmD,QAAQlD,GAAtC,UACI,oBAAKtB,GAAG,WAAR,SAAmB,6BAAI,cAAC,IAAD,CAASD,GAAG,YAAY6E,YAAa,CAACrC,eAAe,QAArD,0BACvB,oBAAIvC,GAAG,YAAP,SAAoB,6BAAI,cAAC,IAAD,CAASD,GAAG,SAAZ,uBACxB,qBAAIC,GAAG,kBAAkB6E,aAAchB,EAAWiB,aAAcjB,EAAWkB,aAAcb,EAAzF,UAAyG,wCAAgBrB,EAAM,cAAC,EAAD,CAAYxC,QAAQ,SAAS,cAAC,EAAD,CAAYA,QAAQ,QAAQC,YAAaA,UAGzM,sBAAKN,GAAG,YAAYyC,QAAS,kBAAM0B,KAAnC,UACQ,wBACA,wBACA","file":"static/js/3.0e49ca8d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Copy_of_Datt-removebg-preview.58267282.png\";","import React, {useEffect} from 'react'\nimport logo from '../images/Copy_of_Datt-removebg-preview.png'\n\nimport {Link} from 'react-router-dom'\n\ninterface LogoHeadProps {\n\n}\n\nconst LogoHead: React.FC<LogoHeadProps> = () => {\n\n        useEffect(() => { \n        })\n        \n        return (<Link to=\"/\"><div id=\"image-container\"><img id=\"logo\" alt=\"Logo spelling D.A.T.T\" src={logo} /></div></Link>);\n\n}\n\n\n\nexport default LogoHead\n\n\n","import React, {useContext, useEffect, useState} from 'react'\nimport {EventContext, CurrentEventContext} from '../App'\n\nimport {Link, useLocation} from 'react-router-dom'\nimport Axios from 'axios'\ninterface EventModalProps {\n   styling: string\n   changeState?:() => void\n}\n\n\n\nconst EventModal: React.FC<EventModalProps> = ({styling, changeState}) => {\n    const context = useContext(EventContext)\n    const eventContext = useContext(CurrentEventContext)\n    const [events, setEvents] = useState<any>([])\n    const [dataUrl, setDataUrl] = useState<string>(\"\")\n    const location = useLocation()\n    useEffect(() => {\n        \n       if (context?.status === \"LOADED\") {\n            setEvents(context.events)\n       } \n       console.log(`Path is now ${location.pathname}`)\n       if (changeState) {\n        changeState()\n       }\n      \n    }, [context, location])\n\n    \n\n        return (<div id=\"event-modal\" style={{display:styling}}>{events.map((event:any) => {\n                \n            let data = \"\"\n            Axios.get(event.url).then((response) => {\n                    data = response.data\n            })  \n            const goToEvent = (e:any) => {\n                e.stopPropagation();\n                eventContext?.getEvents(event, data)\n            }\n            return <Link \n\n            to={`/events/${event.event_name.split(\" \").join(\"-\").toLowerCase()}`} \n            style={{textDecoration:\"none\", color:\"#404040\"}} onClick={(e) => goToEvent(e)} onTouchEnd={goToEvent}>\n                <p className=\"modal-event\">{event.event_name}</p>\n                </Link>\n        })}</div>);\n}\n\nexport default EventModal","import React, {useState, useEffect, useRef} from 'react'\nimport LogoHead from './LogoHead'\nimport {MdKeyboardArrowDown} from 'react-icons/md'\nimport EventModal from './EventModal'\nimport {Link, NavLink, useHistory, useLocation}  from 'react-router-dom'\nimport { setTimeout } from 'timers'\n\ninterface NavigationProps {\n\n}\n\n\nconst Navigation: React.FC<NavigationProps> = () => {\n    const [state, setState] = useState(true)\n    const [open, setOpen] = useState(false)\n    const [clicked, setClicked] = useState(false)\n    const [display, setDisplay] = useState(1)\n    const [size, setSize] = useState<boolean | null>(null)\n    const [active, setActive] = useState(false)\n    const blogRef =  useRef()\n    const history = useHistory()\n    const location = useLocation()\n    useEffect( () => {\n        \n        if (window.innerWidth > 768) {\n            setSize(true)\n            \n            \n        } else {\n            setDisplay(0)\n            setSize(false)\n        }\n\n        let aTags = Array.from(document.querySelectorAll(\"li > h3 > a\")  as unknown as HTMLCollectionOf<HTMLElement>)\n        \n        for (let a of aTags) {\n            a.style.textDecoration = \"none\"\n        }   \n    },)\n\n    const svgChange = () => {\n        let svg = document.querySelector('svg') as SVGSVGElement\n        svg.style.fill = '#f06f33'\n        svg.style.transition =  'all 0.3s cubic-bezier(0.000, 0.000, 0.230, 1)'\n        setState(false)\n\n    }\n\n    const svgChangeAgain = () => {\n        let svg = document.querySelector('svg') as SVGSVGElement\n        svg.style.fill = '#008e97'\n\n            setState(true)\n        \n        \n    }\n    const clickBurger = (opt:boolean=false) => {\n        setClicked(true)\n\n       \n        const nav = document.querySelector('#navigation-small') as HTMLDivElement\n        const navUl = document.querySelector('#nav-ul-small') as HTMLUListElement\n        \n\n        if (opt)  {\n            navUl.style.transition = 'none'\n        }\n        else {\n            navUl.style.transition = \"all ease 0.18s\"\n        }\n        nav.style.transition = \"all ease 0.35s\"\n        if (open) {\n            nav.style.height = \"50px\"\n            setOpen(false)\n            navUl.style.opacity = \"0\"\n            setTimeout(() => navUl.style.display = \"none\", 300)\n        }\n        else {\n            navUl.style.display = \"flex\"\n            navUl.style.opacity = \"0\"\n            navUl.style.display = \"block\"\n            setOpen(true)\n            nav.style.height = \"220px\"\n\n            setTimeout(() => navUl.style.opacity = \"1\", 100)\n            \n        }\n\n        \n        \n    }\n\n    window.addEventListener('resize', () => {\n        \n        if (window.innerWidth > 768) {\n            setSize(true)\n        }\n        else {\n            setSize(false)\n            if (open) {\n                clickBurger(true)\n            }\n        }\n    \n    })\n\n    window.addEventListener(\"scroll\", () => {\n        let eventNav = document.querySelector(\"#event-nav\") as HTMLElement\n        if (window.scrollY > 60 && !state){\n           \n         \n            \n        }\n       \n        \n        \n        \n        \n    })\n\n   \n\n    const changeState = () => {\n        setState(true)\n    }\n        return (<div>{size?<nav id=\"navigation\">\n                \n                <Link to=\"/\"><LogoHead /></Link>\n            <ul id=\"nav-ul\">\n                <li><h3 ><NavLink to=\"/our-team\" activeStyle={{textDecoration:'none'}}>Our Team</NavLink></h3></li>\n                \n                <li id=\"event-nav\" onMouseEnter={svgChange} onTouchStart={svgChange} onMouseLeave={svgChangeAgain}><h3>Events<MdKeyboardArrowDown /></h3>{state?<EventModal styling=\"none\"/>:<EventModal changeState={changeState} styling=\"block\"/>}</li>\n                <li><h3><NavLink to=\"/blogs\" >Blogs</NavLink></h3></li>\n                \n                \n            </ul>\n        </nav>:<nav id=\"navigation-small\">\n                \n                <Link to=\"/\"><LogoHead /></Link>\n            <ul id=\"nav-ul-small\" style={{opacity:display}}>\n                <li  id=\"our-team\"><h3><NavLink to=\"/our-team\" activeStyle={{textDecoration:'none'}}>Our Team</NavLink></h3></li>\n                <li id=\"blog-head\" ><h3><NavLink to=\"/blogs\" >Blogs</NavLink></h3></li>\n                <li id=\"event-nav-small\" onMouseEnter={svgChange} onTouchStart={svgChange} onMouseLeave={svgChangeAgain}><h3>Events</h3>{state?<EventModal styling=\"none\"/>:<EventModal styling=\"block\" changeState={changeState}/>}</li>\n                \n            </ul>\n            <div id=\"hamburger\" onClick={() => clickBurger()}>\n                    <div></div>\n                    <div></div>\n                    <div></div>\n                </div>\n        </nav>}</div>);\n}\nexport default Navigation"],"sourceRoot":""}