{"version":3,"sources":["components/Admin/EditUser.tsx","components/Admin/UserAdmin.tsx","components/Admin/Home.tsx"],"names":["EditUser","dname","ddescription","dlocation","useState","name","setName","description","setDescription","image","setImage","fileType","setFileType","fileVideoType","setFileVideoType","video","setVideo","vidMessage","setVidMessage","imageMessage","setImageMessage","fileEl","useRef","type","context","useContext","RunningContext","videoEl","console","log","options","maxSizeMB","getImage","e","id","a","reader","FileReader","target","files","includes","imageCompression","compressedFile","onloadend","previewImage","document","getElementById","src","result","style","display","readAsDataURL","Home","value","onChange","ref","color","width","padding","marginBottom","onClick","current","click","getVideo","alt","getCookie","axios","post","key","encodeURIComponent","vidtype","then","res","optionsVideo","headers","ax","put","data","running","imgtype","Promise","all","catch","err","UserAdmin","getUserEdit","className","get","params","rows","row","url","getUserInfo","Consumer"],"mappings":"mNAkMeA,EA9K2B,SAAC,GAAqC,IAApCC,EAAmC,EAAnCA,MAAMC,EAA6B,EAA7BA,aAAcC,EAAe,EAAfA,UAAe,EACnDC,mBAASH,GAD0C,mBACpEI,EADoE,KAC9DC,EAD8D,OAErCF,mBAASF,GAF4B,mBAEpEK,EAFoE,KAEvDC,EAFuD,OAGjDJ,mBAAc,MAHmC,mBAGpEK,EAHoE,KAG7DC,EAH6D,OAI3CN,mBAAS,IAJkC,mBAIpEO,EAJoE,KAI1DC,EAJ0D,OAKjCR,mBAAS,IALwB,mBAKpES,EALoE,KAKrDC,EALqD,OAMjDV,mBAAc,MANmC,mBAMpEW,EANoE,KAM7DC,EAN6D,OAOvCZ,mBAAS,IAP8B,mBAOpEa,EAPoE,KAOxDC,EAPwD,OAQnCd,mBAAS,IAR0B,mBAQpEe,EARoE,KAQtDC,EARsD,KASrEC,EAASC,iBAAY,uBAAOC,KAAK,UACjCC,EAAUC,qBAAWC,KACrBC,EAAUL,iBAAY,uBAAOC,KAAK,UACxCK,QAAQC,IAAI1B,GACZ,IAAM2B,EAAU,CACZC,UAAU,IAGRC,EAAQ,uCAAG,WAAOC,EAAOC,GAAd,iBAAAC,EAAA,yDACTC,EAAS,IAAIC,WACZJ,EAAEK,OAAOC,MAAM,GAAGhB,KAAKiB,SAAS,SAFxB,uBAGTpB,EAAgB,8BAHP,0BAOTA,EAAgB,IAPP,cASbR,EAAYqB,EAAEK,OAAOC,MAAM,GAAGhB,MATjB,UAUekB,YAAiBR,EAAEK,OAAOC,MAAM,GAAIT,GAVnD,eAUTY,EAVS,iBAWRhC,EAASgC,GAXD,QAYdd,QAAQC,IAAII,EAAEK,OAAOC,MAAM,IAC1BH,EAAOO,UAAY,SAACV,GAChB,IAAIW,EAAeC,SAASC,eAAeZ,GAC3CU,EAAaG,IAAMX,EAAOY,OACR,KAAd7C,IACAyC,EAAaK,MAAMC,QAAU,UAIrCd,EAAOe,cAAclB,EAAEK,OAAOC,MAAM,IArBvB,4CAAH,wDAuIV,OAAQ,gCACJ,cAACa,EAAA,EAAD,IACA,sBAAKlB,GAAG,YAAR,UACA,sCAEA,uBAAOX,KAAK,OAAOW,GAAG,QAAQmB,MAAOhD,EAAMiD,SAAU,SAACrB,GAAD,OAAO3B,EAAQ2B,EAAEK,OAAOe,UAC7E,6CACA,0BAAUnB,GAAG,UAAUmB,MAAO9C,EAAa+C,SAAU,SAACrB,GAAD,OAAOzB,EAAeyB,EAAEK,OAAOe,UACpF,4CACA,uBAAO9B,KAAK,OAAOlB,KAAK,QAAQ4C,MAAO,CAACC,QAAQ,QAAQhB,GAAG,QAAQoB,SAAU,SAACrB,GAAD,OAAOD,EAASC,EAAG,iBAAiBsB,IAAKlC,IACtH,wBAAQ4B,MAAO,CAACO,MAAO,QAASC,MAAM,cAAeC,QAAQ,OAAQC,aAAa,QAASC,QAzG/E,WAChBvC,EAAOwC,QAAQC,SAwGX,+BAA2I,uBAE3I,uBAAOvC,KAAK,OAAOlB,KAAK,QAAQ4C,MAAO,CAACC,QAAQ,QAAQhB,GAAG,QAAQoB,SAAU,SAACrB,GAAD,OA5HpE,SAACA,GAGd,GAFAf,EAAc,8BACdU,QAAQC,IAAII,EAAEK,OAAOC,MAAM,IACtBN,EAAEK,OAAOC,MAAM,GAAGhB,KAAKiB,SAAS,SAArC,CAKA,IAAIJ,EAAS,IAAIC,WACbvB,EAAiBmB,EAAEK,OAAOC,MAAM,GAAGhB,MACnCP,EAASiB,EAAEK,OAAOC,MAAM,IAC5BH,EAAOO,UAAY,SAACV,GAChBL,QAAQC,IAAII,IAEhBG,EAAOe,cAAclB,EAAEK,OAAOC,MAAM,SAVhCrB,EAAc,6BAwHsE6C,CAAS9B,IAAIsB,IAAK5B,IACzF,KAAZxB,EAAe,qBAAK4C,IAAK5C,EAAW6D,IAAI,UAAU9B,GAAG,iBAAkB,qBAAKa,IAAI,GAAGiB,IAAI,UAAU9B,GAAG,eAAee,MAAO,CAACC,QAAQ,UAAW,uBAC/I,wBAAQD,MAAO,CAACO,MAAO,QAASC,MAAM,cAAeC,QAAQ,OAAQC,aAAa,QAASC,QAxG1E,WACrBjC,EAAQkC,QAAQC,SAuGZ,+BACA,6BAAK7C,IACL,uBAAOM,KAAK,SAAS8B,MAAM,kBAAkBnB,GAAG,SAAS0B,QAnG9C,WAEf,GAAmB,+BAAf3C,GACiB,KAAjBE,EAAJ,CACA,IAAIe,EAAK+B,YAAU,UAEdxD,GAAUM,GASLN,GAASM,EACfmD,IAAMC,KAAK,QAAS,CAChB9D,KAAKA,EACLE,YAAYA,EACZ2B,GAAGA,EACHkC,IAAIC,mBAAmBhE,GACvBiE,QAAQzD,IACT0D,MAAK,SAAAC,GACJ,IAAMC,EAAe,CACjBC,QAAS,CACL,eAAe7D,IAGvB8D,IAAGC,IAAIJ,EAAIK,KAAM9D,EAAO0D,GAAcF,MAAK,WACvC/C,EAAQsD,gBAIXrE,IAAUM,EACfmD,IAAMC,KAAK,QAAS,CAChB9D,KAAKA,EACLE,YAAYA,EACZ2B,GAAGA,EACHkC,IAAIC,mBAAmBhE,GACvB0E,QAAQpE,IACT4D,MAAK,SAAAC,GACJ,IAAM1C,EAAU,CACZ4C,QAAS,CACL,eAAe/D,IAGvBgE,IAAGC,IAAIJ,EAAIK,KAAMpE,EAAOqB,GAASyC,MAAK,WAClC/C,EAAQsD,gBAKpBZ,IAAMC,KAAK,QAAS,CAChB9D,KAAKA,EACLE,YAAYA,EACZ2B,GAAGA,EACHkC,IAAIC,mBAAmBhE,GACvB0E,QAAQpE,EACR2D,QAAQzD,IACT0D,MAAK,SAAAC,GACJ,IAAM1C,EAAU,CACZ4C,QAAS,CACL,eAAe/D,IAGjB8D,EAAe,CACjBC,QAAS,CACL,eAAe7D,IAGxBe,QAAQC,IAAI2C,EAAIK,MAEXG,QAAQC,IAAI,CAACN,IAAGC,IAAIJ,EAAIK,KAAKpE,MAAMA,EAAOqB,GAAU6C,IAAGC,IAAIJ,EAAIK,KAAK9D,MAAOA,EAAO0D,KAAgBF,MAAK,WACnG/C,EAAQsD,gBAKhBI,OAAM,SAAAC,GACNvD,QAAQC,IAAIsD,MAxEZjB,IAAMC,KAAK,QAAS,CAChB9D,KAAKA,EACLE,YAAYA,EACZ2B,GAAGA,IACJqC,MAAK,WACJ/C,EAAQsD,wBCjETM,UA5B6B,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,YAwBtC,OAAQ,qBAAKC,UAAU,aAAa1B,QAAS,kBAvBzB,WAEhB,IAAI1B,EAAK+B,YAAU,UAEnBC,IAAMqB,IAAI,QAAS,CACfC,OAAO,CACHtD,GAAIA,KAGTqC,MAAK,SAAAC,GAMJ,GAAqB,KAAlBA,EAAIK,KAAKY,KAAa,CACrB,IAAIC,EAAMlB,EAAIK,KAAKY,KAAK,GAC5BJ,EAAY,cAAC,EAAD,CAAUpF,MAAOyF,EAAIrF,KAAMH,aAAcwF,EAAInF,YAAaJ,UAAWqE,EAAIK,KAAKc,YAE1FN,EAAY,cAAC,EAAD,CAAUpF,MAAO,GAAIC,aAAc,GAAIC,UAAW,SAInByF,IAA3C,SACJ,6D,gCCjCZ,wBAkBexC,IAZmB,WAE1B,OAAQ,8BACA,cAAC,IAAeyC,SAAhB,UACK,SAACxC,GACE,OACA,oBAAIO,QAAU,kBAAMP,EAAMyB,WAAW5C,GAAG,OAAxC","file":"static/js/16.1f2f4dee.chunk.js","sourcesContent":["import React, {useState, useRef, useContext} from 'react'\nimport axios from '../../axInstance'\nimport getCookie from '../../getCookie'\nimport Home from './Home'\nimport ax from 'axios'\nimport {RunningContext} from './AdminPanel'\nimport imageCompression from 'browser-image-compression';\ninterface EditUserProps {\n    dname:string;\n    ddescription:string;\n    dlocation:any;\n\n}\n\n\n\n\n\n\n\nconst EditUser: React.FC<EditUserProps> = ({dname,ddescription, dlocation}) => {\n    const [name, setName] = useState(dname)\n    const [description, setDescription] = useState(ddescription)\n    const [image, setImage] = useState<any>(null)\n    const [fileType, setFileType] = useState('')\n    const [fileVideoType, setFileVideoType] = useState('')\n    const [video, setVideo] = useState<any>(null)\n    const [vidMessage, setVidMessage] = useState('')\n    const [imageMessage, setImageMessage] = useState('')\n    const fileEl = useRef<any>(<input type=\"file\" />) \n    const context = useContext(RunningContext)\n    const videoEl = useRef<any>(<input type=\"file\"/>)\n    console.log(dlocation)\n    const options = {\n        maxSizeMB:0.1\n    }\n\n    const getImage = async (e:any, id:string) => {\n        var reader = new FileReader();\n        if (!e.target.files[0].type.includes(\"image\")) {\n            setImageMessage('That file is not an image.')\n            return\n        }\n        else {\n            setImageMessage('')\n        }\n        setFileType(e.target.files[0].type)\n        let compressedFile = await  imageCompression(e.target.files[0], options)\n       await setImage(compressedFile);\n       console.log(e.target.files[0])\n        reader.onloadend = (e) => {\n            let previewImage = document.getElementById(id) as HTMLImageElement\n            previewImage.src = reader.result as string \n            if (dlocation === \"\") {\n                previewImage.style.display = \"block\"\n            }\n            \n        }\n        reader.readAsDataURL(e.target.files[0])\n}   \n    const getVideo = (e:any) => {\n        setVidMessage('Video successfully loaded.')\n        console.log(e.target.files[0])\n        if (!e.target.files[0].type.includes(\"video\")) {\n            setVidMessage('That file is not a video.')\n            return\n        }\n        \n        let reader = new FileReader()\n            setFileVideoType(e.target.files[0].type)\n            setVideo(e.target.files[0])\n        reader.onloadend = (e) => {\n            console.log(e)\n        }\n        reader.readAsDataURL(e.target.files[0])\n    }\n    \n    const clickButton = () => {\n        fileEl.current.click();\n        \n    }   \n    \n    const clickButtonVideo = () => {\n        videoEl.current.click();\n        \n    }   \n\n    \n\n    const formSubmit = () => {\n        \n        if (vidMessage !== 'Video successfully loaded.') return\n        if (imageMessage !== '') return\n        let id = getCookie('userid')\n        \n        if (!image && !video) {\n            axios.post('/user', {\n                name:name, \n                description:description, \n                id:id, \n            }).then(() => {\n                context.running()\n            })\n        }\n        else if (!image && video) {\n            axios.post('/user', {\n                name:name, \n                description:description, \n                id:id, \n                key:encodeURIComponent(name),\n                vidtype:fileVideoType\n            }).then(res => {\n                const optionsVideo = {\n                    headers: {\n                        'Content-Type':fileVideoType\n                      }\n                }\n                ax.put(res.data, video, optionsVideo).then(() => {\n                    context.running()\n                })\n            })\n        }\n        else if (image && !video) {\n            axios.post('/user', {\n                name:name, \n                description:description, \n                id:id, \n                key:encodeURIComponent(name),\n                imgtype:fileType\n            }).then(res => {\n                const options = {\n                    headers: {\n                        'Content-Type':fileType\n                      }\n                }\n                ax.put(res.data, image, options).then(() => {\n                    context.running()\n                })\n            })\n        }\n        else {\n        axios.post('/user', {\n            name:name, \n            description:description, \n            id:id, \n            key:encodeURIComponent(name),\n            imgtype:fileType,\n            vidtype:fileVideoType\n        }).then(res => {\n            const options = {\n                headers: {\n                    'Content-Type':fileType\n                  }\n            }\n            const optionsVideo = {\n                headers: {\n                    'Content-Type':fileVideoType\n                  }\n            }\n           console.log(res.data)\n\n                Promise.all([ax.put(res.data.image,image, options), ax.put(res.data.video, video, optionsVideo)]).then(() => {\n                    context.running()\n                })\n            })\n        \n\n           .catch(err => {\n            console.log(err)\n        })\n    }\n    }\n        return (<div>\n            <Home />\n            <div id=\"edit-user\">\n            <h3>Name</h3>\n            \n            <input type=\"text\" id=\"title\" value={name} onChange={(e) => setName(e.target.value)}/>\n            <h3>Description</h3>\n            <textarea id=\"details\" value={description} onChange={(e) => setDescription(e.target.value)}/>\n            <h3>Image File</h3>\n            <input type=\"file\" name=\"image\" style={{display:'none'}}id=\"image\" onChange={(e) => getImage(e, 'detail-photo')} ref={fileEl}/>\n            <button style={{color: 'black', width:'fit-content', padding:\"10px\", marginBottom:\"20px\"}} onClick={clickButton}>Upload Your Image</button><br />\n            \n            <input type=\"file\" name=\"video\" style={{display:'none'}}id=\"video\" onChange={(e) => getVideo(e)} ref={videoEl}/>\n            {dlocation!==\"\"?<img src={dlocation} alt=\"preview\" id=\"detail-photo\" />:<img src=\"\" alt=\"preview\" id=\"detail-photo\" style={{display:'none'}}/>}<br />\n            <button style={{color: 'black', width:'fit-content', padding:\"10px\", marginBottom:\"20px\"}} onClick={clickButtonVideo}>Upload Your Video</button>\n            <h4>{vidMessage}</h4>\n            <input type=\"submit\" value=\"Set Description\" id=\"submit\" onClick={formSubmit}/>\n           \n        </div>\n        </div>);\n}\n\nexport default EditUser","import React from 'react'\nimport EditUser from './EditUser';\nimport axios from '../../axInstance'\nimport getCookie from '../../getCookie'\ninterface UserAdminProps {\n    getUserEdit:(components:JSX.Element) => void\n}\n\nconst UserAdmin: React.FC<UserAdminProps> = ({getUserEdit}) => {\n        const getUserInfo = () => {\n            \n            let id = getCookie('userid')\n        \n            axios.get('/user', {\n                params:{\n                    id: id\n                }\n\n            }).then(res => {\n                \n               \n               \n                \n                \n                if(res.data.rows !== \"\") {\n                    let row = res.data.rows[0]\n                getUserEdit(<EditUser dname={row.name} ddescription={row.description} dlocation={res.data.url}/>)\n            } else {\n                getUserEdit(<EditUser dname={\"\"} ddescription={\"\"} dlocation={\"\"}/>)\n            }\n        })\n        }\n        return (<div className=\"user-admin\" onClick={() => getUserInfo()}>\n            <h2>Click Here to Edit User</h2>\n            </div>);\n}\nexport default UserAdmin","import React from 'react'\nimport {RunningContext} from './AdminPanel'\ninterface HomeProps {\n\n}\n\nconst Home: React.FC<HomeProps> = () => {\n\n        return (<div>\n                <RunningContext.Consumer >\n                    {(value:any) => {\n                        return (\n                        <h3 onClick ={() => value.running()} id=\"home\">Go Home</h3>\n                        )}}\n            \n            </RunningContext.Consumer>\n        </div>);\n}\nexport default Home"],"sourceRoot":""}